// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using UFF.Infra.Context;

#nullable disable

namespace UFF.Infra.Migrations
{
    [DbContext(typeof(UffContext))]
    [Migration("20241007011439_adiciona_prop_ausentes_usuario")]
    partial class adiciona_prop_ausentes_usuario
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("UFF.Domain.Entity.Store", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("text")
                        .HasColumnName("Address");

                    b.Property<string>("City")
                        .HasColumnType("text")
                        .HasColumnName("City");

                    b.Property<string>("Cnpj")
                        .HasColumnType("text")
                        .HasColumnName("Cnpj");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("Description");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("LastUpdate");

                    b.Property<string>("Number")
                        .HasColumnType("text")
                        .HasColumnName("Number");

                    b.Property<string>("Phone")
                        .HasColumnType("text")
                        .HasColumnName("Phone");

                    b.Property<DateTime>("RegisteringDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("RegisteringDate");

                    b.Property<string>("State")
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("Status");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Store", (string)null);
                });

            modelBuilder.Entity("UFF.Domain.Entity.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("text")
                        .HasColumnName("Address");

                    b.Property<string>("City")
                        .HasColumnType("text")
                        .HasColumnName("City");

                    b.Property<string>("Cpf")
                        .HasColumnType("text")
                        .HasColumnName("Cpf");

                    b.Property<string>("Email")
                        .HasColumnType("text")
                        .HasColumnName("Email");

                    b.Property<string>("LastName")
                        .HasColumnType("text")
                        .HasColumnName("LastName");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("LastUpdate");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("Name");

                    b.Property<string>("Number")
                        .HasColumnType("text")
                        .HasColumnName("Number");

                    b.Property<string>("Password")
                        .HasColumnType("text")
                        .HasColumnName("Password");

                    b.Property<string>("Phone")
                        .HasColumnType("text")
                        .HasColumnName("Phone");

                    b.Property<int>("Profile")
                        .HasColumnType("integer");

                    b.Property<DateTime>("RegisteringDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("RegisteringDate");

                    b.Property<string>("StateId")
                        .HasColumnType("text")
                        .HasColumnName("StateId");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("Status");

                    b.Property<int?>("StoreId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("UFF.Domain.Entity.Store", b =>
                {
                    b.HasOne("UFF.Domain.Entity.User", "User")
                        .WithOne("Store")
                        .HasForeignKey("UFF.Domain.Entity.Store", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("UFF.Domain.Entity.User", b =>
                {
                    b.Navigation("Store");
                });
#pragma warning restore 612, 618
        }
    }
}
